data {
    basePath = "data/"
    outputPath = "output/"

    csvSerializer {
        isInputEscaped = "false"
        quoteAllFields = "true"
    }

    # These entries correspond to entities
    # Each entity should define a path and metaPath
    books {
        path = "unprocessed/Books.json.gz"
        metaPath = "unprocessed/Books.json.gz"
    }
    movies {
        path = "unprocessed/Movies_and_TV.json.gz"
        metaPath = "unprocessed/meta_Movies_and_TV.json.gz"
    }
}

dataCleaner {
    # Filters to apply to the reviews
    # If these filters match, the review is discarded
    filterReviews {
        ifReviewTextIsNull = "true"
    }

    # Filters to apply to review data
    # Reviews will be cleaned to meet this criteria
    cleanMeta {
        removeParenthesisInTitle = "true"
        # Generally, if the length of a product title is longer than 100 it's too much information to be useful
        # set to -1 to disable
        length = "-1"

        # Executes regexes against the text
        # regex matches are erased from source text
        # NOTE: regexes need backslashes to be escaped as double backslashes.
        regexClear = [
            # Lots of VHS things for some reason
            "VHS",
            # Lots of products with extra data in brackets ex: "(2 for 1)"
            "\\((.*?)\\)",
            # Same thing with square brackets
            "\\[(.*?)\\]"
            # &amp for HTML formatting can be stripped
            "&amp"
        ]
    }
}

spark {
    master="local"
    parser {
        filePartitions=8
    }
}